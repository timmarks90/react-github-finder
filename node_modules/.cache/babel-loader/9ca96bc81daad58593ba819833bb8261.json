{"ast":null,"code":"var _jsxFileName = \"/Users/timmarks/Documents/Coding/Udemy/traversy-react-front-to-back/react-github-finder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const initialState = {\n    users: [],\n    loading: false\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    dispatch({\n      type: 'GET_USERS',\n      payload: data\n    });\n  }; // Set loading\n\n\n  const setLoading = () => {\n    dispatch({\n      type: 'SET_LOADING'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      loading: state.loading,\n      fetchUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/Users/timmarks/Documents/Coding/Udemy/traversy-react-front-to-back/react-github-finder/src/context/github/GithubContext.js"],"names":["createContext","useReducer","githubReducer","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","initialState","users","loading","state","dispatch","fetchUsers","response","fetch","headers","Authorization","data","json","type","payload","setLoading"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;AAEA,MAAMI,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC1C,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAArB;AAKA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACC,aAAD,EAAgBU,YAAhB,CAApC;;AAEA,QAAMK,UAAU,GAAG,YAAY;AAE3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,UAAW,QAAf,EAAwB;AAChDgB,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,SAAQb,YAAa;AADhC;AADuC,KAAxB,CAA5B;AAMA,UAAMc,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAE,WADD;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAKH,GAfD,CAR0C,CAyB1C;;;AACA,QAAMI,UAAU,GAAG,MAAM;AACrBV,IAAAA,QAAQ,CAAC;AAACQ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACH,GAFD;;AAIA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACX,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAd;AAAqBC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAApC;AAA6CG,MAAAA;AAA7C,KAA/B;AAAA,cACFN;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAjCM;;GAAMD,c;;KAAAA,c;AAmCb,eAAeP,aAAf","sourcesContent":["import { createContext, useReducer } from 'react';\nimport githubReducer from './GithubReducer';\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport const GithubProvider = ({children}) => {\n    const initialState = {\n        users: [],\n        loading: false \n    };\n\n    const [state, dispatch] = useReducer(githubReducer, initialState);\n\n    const fetchUsers = async () => {\n\n        const response = await fetch(`${GITHUB_URL}/users`, {\n            headers: {\n                Authorization: `token ${GITHUB_TOKEN}`\n            }\n        });\n\n        const data = await response.json();\n\n        dispatch({\n            type: 'GET_USERS',\n            payload: data\n\n        });\n    };\n\n    // Set loading\n    const setLoading = () => {\n        dispatch({type: 'SET_LOADING'});\n    };\n\n    return <GithubContext.Provider value={{users: state.users, loading: state.loading, fetchUsers}}>\n        {children}\n    </GithubContext.Provider>\n};\n\nexport default GithubContext;"]},"metadata":{},"sourceType":"module"}