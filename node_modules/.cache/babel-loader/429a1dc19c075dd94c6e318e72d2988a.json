{"ast":null,"code":"var _jsxFileName = \"/Users/timmarks/Documents/Coding/Udemy/traversy-react-front-to-back/react-github-finder/src/context/github/GithubContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubContext = /*#__PURE__*/createContext();\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\nexport const GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchUsers = async () => {\n    const response = await fetch(`${GITHUB_URL}/users`, {\n      headers: {\n        Authorization: `token ${GITHUB_TOKEN}`\n      }\n    });\n    const data = await response.json();\n    setUsers(data);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: {\n      users,\n      loading,\n      fetchUsers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GithubProvider, \"7VV5U2Js0/PjsYq3k2PJZfNfyyo=\");\n\n_c = GithubProvider;\nexport default GithubContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"sources":["/Users/timmarks/Documents/Coding/Udemy/traversy-react-front-to-back/react-github-finder/src/context/github/GithubContext.js"],"names":["createContext","useState","GithubContext","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","GithubProvider","children","users","setUsers","loading","setLoading","fetchUsers","response","fetch","headers","Authorization","data","json"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;AAEA,MAAMG,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMc,UAAU,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,UAAW,QAAf,EAAwB;AAChDe,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,SAAQZ,YAAa;AADhC;AADuC,KAAxB,CAA5B;AAMA,UAAMa,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEAT,IAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAXD;;AAaA,sBAAO,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAD;AAAQE,MAAAA,OAAR;AAAiBE,MAAAA;AAAjB,KAA/B;AAAA,cACFL;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CApBM;;GAAMD,c;;KAAAA,c;AAsBb,eAAeP,aAAf","sourcesContent":["import { createContext, useState } from 'react';\n\nconst GithubContext = createContext();\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\nexport const GithubProvider = ({children}) => {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const fetchUsers = async () => {\n        const response = await fetch(`${GITHUB_URL}/users`, {\n            headers: {\n                Authorization: `token ${GITHUB_TOKEN}`\n            }\n        });\n\n        const data = await response.json();\n\n        setUsers(data);\n        setLoading(false);\n    };\n\n    return <GithubContext.Provider value={{users, loading, fetchUsers}}>\n        {children}\n    </GithubContext.Provider>\n};\n\nexport default GithubContext;"]},"metadata":{},"sourceType":"module"}