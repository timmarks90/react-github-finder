{"ast":null,"code":"import axios from 'axios';\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN; // Get search results\n\nexport const searchUsers = async text => {\n  const params = new URLSearchParams({\n    q: text\n  });\n  const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n  const {\n    items\n  } = await response.json();\n  return items;\n}; // Get single user\n\nexport const getUser = async login => {\n  const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n\n  if (response.status === 404) {\n    window.location = '/notfound';\n  } else {\n    const data = await response.json();\n    return data;\n  }\n\n  ;\n}; // Get repos\n\nexport const getUserRepos = async login => {\n  const params = new URLSearchParams({\n    sort: 'created',\n    per_page: 10\n  });\n  const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n    headers: {\n      Authorization: `token ${GITHUB_TOKEN}`\n    }\n  });\n  const data = await response.json();\n  return data;\n};","map":{"version":3,"sources":["/Users/timmarks/Documents/Coding/Udemy/traversy-react-front-to-back/react-github-finder/src/context/github/GithubActions.js"],"names":["axios","GITHUB_URL","process","env","REACT_APP_GITHUB_URL","GITHUB_TOKEN","REACT_APP_GITHUB_TOKEN","searchUsers","text","params","URLSearchParams","q","response","fetch","headers","Authorization","items","json","getUser","login","status","window","location","data","getUserRepos","sort","per_page"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,IAAP,IAAgB;AACvC,QAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/BC,IAAAA,CAAC,EAAEH;AAD4B,GAApB,CAAf;AAIA,QAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAW,iBAAgBQ,MAAO,EAAtC,EAAyC;AACjEK,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,SAAQV,YAAa;AADhC;AADwD,GAAzC,CAA5B;AAMA,QAAM;AAACW,IAAAA;AAAD,MAAU,MAAMJ,QAAQ,CAACK,IAAT,EAAtB;AAEA,SAAOD,KAAP;AACH,CAdM,C,CAgBP;;AACA,OAAO,MAAME,OAAO,GAAG,MAAOC,KAAP,IAAiB;AACpC,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAW,UAASkB,KAAM,EAA9B,EAAiC;AACzDL,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,SAAQV,YAAa;AADhC;AADgD,GAAjC,CAA5B;;AAMA,MAAIO,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,IAAAA,MAAM,CAACC,QAAP,GAAkB,WAAlB;AACH,GAFD,MAEO;AACH,UAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACK,IAAT,EAAnB;AACA,WAAOM,IAAP;AACH;;AAAA;AACJ,CAbM,C,CAeP;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOL,KAAP,IAAiB;AACzC,QAAMV,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/Be,IAAAA,IAAI,EAAE,SADyB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAApB,CAAf;AAKA,QAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,UAAW,UAASkB,KAAM,UAASV,MAAO,EAA9C,EAAiD;AACzEK,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,SAAQV,YAAa;AADhC;AADgE,GAAjD,CAA5B;AAMA,QAAMkB,IAAI,GAAG,MAAMX,QAAQ,CAACK,IAAT,EAAnB;AACA,SAAOM,IAAP;AACH,CAdM","sourcesContent":["import axios from 'axios';\n\nconst GITHUB_URL = process.env.REACT_APP_GITHUB_URL;\nconst GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\n\n// Get search results\nexport const searchUsers = async (text) => {\n    const params = new URLSearchParams({\n        q: text\n    });\n\n    const response = await fetch(`${GITHUB_URL}/search/users?${params}`, {\n        headers: {\n            Authorization: `token ${GITHUB_TOKEN}`\n        }\n    });\n    \n    const {items} = await response.json();\n    \n    return items;\n};\n\n// Get single user\nexport const getUser = async (login) => {\n    const response = await fetch(`${GITHUB_URL}/users/${login}`, {\n        headers: {\n            Authorization: `token ${GITHUB_TOKEN}`\n        }\n    });\n\n    if (response.status === 404) {\n        window.location = '/notfound';\n    } else {\n        const data = await response.json();\n        return data;\n    };\n};\n\n// Get repos\nexport const getUserRepos = async (login) => {\n    const params = new URLSearchParams({\n        sort: 'created',\n        per_page: 10\n    });\n    \n    const response = await fetch(`${GITHUB_URL}/users/${login}/repos?${params}`, {\n        headers: {\n            Authorization: `token ${GITHUB_TOKEN}`\n        }\n    });\n    \n    const data = await response.json();\n    return data;\n};"]},"metadata":{},"sourceType":"module"}